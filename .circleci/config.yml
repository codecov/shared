version: 2.1

jobs:
  codecovstartup:
    docker:
      - image: circleci/python:3.10.1
    steps:
      - checkout
      - run:
          name: Install CLI
          command: |
            pip install codecov-cli
      - run:
          name: Save commit info 
          command: |
            codecovcli create-commit 
      - run: 
          name: Create report
          command: |
            codecovcli create-report 
  staticanalysis:
    docker:
      - image: circleci/python:3.10.1
    steps:
      - checkout
      - run:
          name: Install CLI
          command: |
            pip install codecov-cli
      - run:
          name: Run Static Analysis
          command: |
            codecovcli static-analysis --token=$STATIC_TOKEN
  labelanalysis:
    docker:
      - image: circleci/python:3.10.1
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            curl https://sh.rustup.rs -sSf | sh -s -- -y
            source $HOME/.cargo/env
            python3 -m venv venv
            . venv/bin/activate
            pip install -r tests/requirements.txt
            pip install setuptools_rust
            python setup.py develop
            pip install --ignore-installed google-cloud-iam-logging
            pip install --ignore-installed google-cloud
            pip install --ignore-installed google-cloud-storage
            pip install --ignore-installed google-cloud-pubsub        
      - run:
          name: Install CLI
          command: |
            . venv/bin/activate
            pip install codecov-cli
      - run:
          name: Run Predictor Analysis
          # Comparing the current commit (HEAD) to Lowest Common Ancestor with main (BASE)
          # In practice this will be the base of the branch (almost all the time)
          command: |
            . venv/bin/activate
            codecovcli label-analysis --token=$STATIC_TOKEN --base-sha=$(git merge-base HEAD^ main)
      - run:
          name: Upload smart-labels
          command: |
            . venv/bin/activate
            codecovcli --codecov-yml-path=codecov_cli.yml do-upload --plugin pycoverage --plugin compress-pycoverage --flag smart-labels --fail-on-error
  linter:
    docker:
      - image: circleci/python:3.7.6
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Running linter
          command: |
            pip3 install black==22.3.0 isort
            black --check .
            isort --profile black --check .
  mutations:
    docker:
      - image: circleci/python:3.7.9
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Run Mutations
          command: |
            curl https://sh.rustup.rs -sSf | sh -s -- -y
            source $HOME/.cargo/env
            python -m venv venv
            . venv/bin/activate
            pip install setuptools_rust mutmut[patch]
            pip install -r tests/requirements.txt
            python setup.py develop
            git diff main $CIRCLE_SHA1 > data.patch
            mutmut run --use-patch-file data.patch || true
            mkdir /tmp/artifacts;
            mutmut junitxml > /tmp/artifacts/mut.xml
      - store_test_results:
          path: /tmp/artifacts/mut.xml
  build:
    parameters:
      imagename:
        type: string
    docker:
      - image: cimg/python:<< parameters.imagename >>
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v07-dependencies-<< parameters.imagename >>-{{ checksum "setup.py" }}
          # fallback to using the latest cache if no exact match is found
          - v07-dependencies-<< parameters.imagename >>

      - run:
          name: install dependencies
          command: |
            curl https://sh.rustup.rs -sSf | sh -s -- -y
            source $HOME/.cargo/env
            python3 -m venv venv
            . venv/bin/activate
            pip install -r tests/requirements.txt
            pip install setuptools_rust
            python setup.py develop

      - save_cache:
          paths:
            - venv
          key: v07-dependencies-<< parameters.imagename >>-{{ checksum "setup.py" }}

      - run:
          name: run tests
          command: |
            . venv/bin/activate
            python -m pytest --cov=./
      - run:
          name: Install CLI
          command: |
            . venv/bin/activate
            pip install codecov-cli
      - run:
          name: Upload to codecov
          command: |
            . venv/bin/activate
            codecovcli do-upload --flag python<< parameters.imagename >> --fail-on-error
          
  rust:
    docker:
      - image: circleci/python:3.9
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Rust tests
          command: |
            curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain nightly
            source $HOME/.cargo/env
            sudo apt-get update
            sudo apt-get install gcc lsb-release wget software-properties-common
            wget https://apt.llvm.org/llvm.sh
            chmod +x llvm.sh
            sudo ./llvm.sh 15
            RUSTFLAGS="-Z instrument-coverage" LLVM_PROFILE_FILE="ribs-%m.profraw" cargo +nightly test --no-default-features
            llvm-profdata-15 merge -sparse ribs-*.profraw -o ribs.profdata
            llvm-cov-15 show --ignore-filename-regex='/.cargo/registry' --instr-profile=ribs.profdata --object `ls target/debug/deps/ribs-* | grep -v "\.d" | grep -v "\.o"` > app.coverage.txt
      - run:
          name: Install CLI
          command: |
            pip install codecov-cli
      - run:
          name: Save commit info 
          command: |
            codecovcli create-commit 
      - run: 
          name: Create report
          command: |
            codecovcli create-report 
      - run:
          name: Upload to codecov
          command: |
            codecovcli do-upload --flag rust
workflows:
  version: 2
  lint-test:
    jobs:
      - mutations
      - rust:
          filters:
            tags:
              only: /.*/
      - linter:
          filters:
            tags:
              only: /.*/
      - codecovstartup
      - staticanalysis:
          requires:
            - codecovstartup
      - labelanalysis:
          requires:
            - staticanalysis
      - build:
          requires:
            - codecovstartup
          matrix:
            parameters:
              imagename: ["3.7.13", "3.8.13", "3.9.12", "3.10.5"]
          filters:
            tags:
              only: /.*/
