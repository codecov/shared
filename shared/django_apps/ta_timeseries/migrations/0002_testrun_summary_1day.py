# Generated by Django 4.2.16 on 2025-02-06 16:56

from django.db import migrations


class Migration(migrations.Migration):
    # cant create this views in a transaction
    atomic = False

    dependencies = [
        ("ta_timeseries", "0001_initial"),
    ]

    operations = [
        migrations.RunSQL(
            """
                create materialized view ta_timeseries_testrun_summary_1day
                with (timescaledb.continuous) as
                select
                    repo_id,
                    testsuite,
                    classname,
                    name,
                    time_bucket(interval '1 days', timestamp) as timestamp_bin,

                    min(computed_name) as computed_name,
                    COUNT(DISTINCT CASE WHEN outcome = 'failure' OR outcome = 'flaky_fail' THEN commit_sha ELSE NULL END) AS failing_commits,
                    last(duration_seconds, timestamp) as last_duration_seconds,
                    avg(duration_seconds) as avg_duration_seconds,
                    COUNT(*) FILTER (WHERE outcome = 'pass') AS pass_count,
                    COUNT(*) FILTER (WHERE outcome = 'failure') AS fail_count,
                    COUNT(*) FILTER (WHERE outcome = 'skip') AS skip_count,
                    COUNT(*) FILTER (WHERE outcome = 'flaky_fail') AS flaky_fail_count,
                    MAX(timestamp) AS updated_at,
                    array_merge_dedup_agg(flags) as flags
                from ta_timeseries_testrun
                group by
                    repo_id, testsuite, classname, name, timestamp_bin;
            """,
            reverse_sql="drop materialized view ta_timeseries_testrun_summary_1day;",
        ),
        migrations.RunSQL(
            """
                create materialized view ta_timeseries_testrun_branch_summary_1day
                with (timescaledb.continuous) as
                select
                    repo_id,
                    branch,
                    testsuite,
                    classname,
                    name,
                    time_bucket(interval '1 days', timestamp) as timestamp_bin,

                    min(computed_name) as computed_name,
                    COUNT(DISTINCT CASE WHEN outcome = 'failure' OR outcome = 'flaky_fail' THEN commit_sha ELSE NULL END) AS failing_commits,
                    last(duration_seconds, timestamp) as last_duration_seconds,
                    avg(duration_seconds) as avg_duration_seconds,
                    COUNT(*) FILTER (WHERE outcome = 'pass') AS pass_count,
                    COUNT(*) FILTER (WHERE outcome = 'failure') AS fail_count,
                    COUNT(*) FILTER (WHERE outcome = 'skip') AS skip_count,
                    COUNT(*) FILTER (WHERE outcome = 'flaky_fail') AS flaky_fail_count,
                    MAX(timestamp) AS updated_at,
                    array_merge_dedup_agg(flags) as flags
                from ta_timeseries_testrun
                where branch in ('main', 'master', 'develop')
                group by
                    repo_id, branch, testsuite, classname, name, timestamp_bin;
            """,
            reverse_sql="drop materialized view ta_timeseries_testrun_branch_summary_1day;",
        ),
    ]
